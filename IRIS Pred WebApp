{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"IRIS Pred WebApp","provenance":[],"collapsed_sections":[],"mount_file_id":"1ulmv6b2l38iGBDvoBQCpNUtnnpaKGw4i","authorship_tag":"ABX9TyOtQ+Pj/txE8Wy2OmSOuADR"},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","metadata":{"id":"SPsuY0MWkk-K","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1597392828412,"user_tz":-330,"elapsed":3108,"user":{"displayName":"kishan kumar","photoUrl":"","userId":"06257549829323403869"}}},"source":["import streamlit as st\n","import pickle"],"execution_count":1,"outputs":[]},{"cell_type":"code","metadata":{"id":"A_XTSgxl5064","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1597394092462,"user_tz":-330,"elapsed":1674,"user":{"displayName":"kishan kumar","photoUrl":"","userId":"06257549829323403869"}}},"source":["dtree_model=pickle.load(open('/content/drive/My Drive/PythonBoss/ML Project/IRIS Predicion WebAPP/dtree_model.pk','rb'))\n","log_model=pickle.load(open('/content/drive/My Drive/PythonBoss/ML Project/IRIS Predicion WebAPP/log_model.pk','rb'))\n","svm_model=pickle.load(open('/content/drive/My Drive/PythonBoss/ML Project/IRIS Predicion WebAPP/svm_model.pk','rb'))"],"execution_count":13,"outputs":[]},{"cell_type":"code","metadata":{"id":"TbPb9zjImJJL","colab_type":"code","colab":{},"executionInfo":{"status":"ok","timestamp":1597393933377,"user_tz":-330,"elapsed":1144,"user":{"displayName":"kishan kumar","photoUrl":"","userId":"06257549829323403869"}}},"source":["def classify(num):\n","    if num<0.5:\n","        return 'Setosa'\n","    elif num <1.5:\n","        return 'Versicolor'\n","    else:\n","        return 'Virginica'\n","def main():\n","    st.title(\"Streamlit Tutorial\")\n","    html_temp = \"\"\"\n","    <div style=\"background-color:teal ;padding:10px\">\n","    <h2 style=\"color:white;text-align:center;\">Iris Classification</h2>\n","    </div>\n","    \"\"\"\n","    st.markdown(html_temp, unsafe_allow_html=True)\n","    activities=['Decision Tree','Logistic Regression','SVM']\n","    option=st.sidebar.selectbox('Which model would you like to use?',activities)\n","    st.subheader(option)\n","    sl=st.slider('Select Sepal Length', 0.0, 10.0)\n","    sw=st.slider('Select Sepal Width', 0.0, 10.0)\n","    pl=st.slider('Select Petal Length', 0.0, 10.0)\n","    pw=st.slider('Select Petal Width', 0.0, 10.0)\n","    inputs=[[sl,sw,pl,pw]]\n","    if st.button('Classify'):\n","        if option=='Decision Tree':\n","            st.success(classify(dtree_model.predict(inputs)))\n","        elif option=='Logistic Regression':\n","            st.success(classify(log_model.predict(inputs)))\n","        else:\n","           st.success(classify(svm_model.predict(inputs)))\n","\n","\n","if __name__=='__main__':\n","    main()"],"execution_count":11,"outputs":[]}]}